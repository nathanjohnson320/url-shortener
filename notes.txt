For detailed installation/general info see README.md

Tech Stack
* Elixir + Phoenix
* React.js
* TailwindCSS + TailwindUI
* Postgres

Setup
1. Install or have docker installed
2. Install asdf to get the right elixir and node versions: https://asdf-vm.com/#/core-manage-asdf
	- You can install these manually as well from https://nodejs.org/en/download/ and https://elixir-lang.org/install.html
3. Make sure you have a postgres db running on port 5432 with username/password of postgres
   - This docker command spins up a ready to go postgres database: `docker run -d -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 postgres:latest`
4. Run `make setup`

Some assumptions I made in the app:
1. Use react hooks over class based components. In the past I've mostly used classes and prefer them more but trend seems to be towards hooks.
2. URLs are not intended to be private. Using HashID for urls is fine even though smaller IDs may be predictable since they only generate 1-3 alphanumeric characters. If I were going to make things more privacy focused I would probably add a large integer to the base hashid to make the smaller urls at least 8 characters.
3. IPs of requests are enough to handle rate limiting. I set the rate limiter to 300/minute (5/second) so if a lot of people are trying to hit the same short URL from the same single IP they may have issues.
4. Long URLs don't need to be unique. Short URLs do. It may make sense to prevent the same user from submitting the same URL multiple times to prevent duplicate data in the future. I'd wait and see how much of a problem it is before I address it.
